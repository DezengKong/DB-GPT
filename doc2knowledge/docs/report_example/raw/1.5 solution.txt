6 解决措施[Corrective Action]
6.1 临时解决措施[Workaround]
NA
6.2 最终解决措施[Solution]
对于语句： select* FROM nettoll.n11 trans splitdetails where trans time >=
to timestamp($1,?) and trans time < to timestamp($2,?) and pass id =any(ARRAY [$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19, $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $30, $31, $32]):
    >因当前分区表的分区键在相关表达式中使用函数或者强转类型时，无法进行分区表剪枝，所以当前执行计划会一次扫描40个分区，导致CPU消耗较高
    >建议客户将SQL的调用方式修改，在表达式中使用常量方式，通过JDBC对应的API接口进行赋值，从而利用内核当前分区表裁剪能力，以减少分区扫描，降低CPU(参见4.4章节)
    此优化方案是分析现场的性能视图以及相关手工测试后给的修改建议，建议如果客户采用此修改方案，在正式上线前对比测试环境上修改前后的CPU消耗，以便充分验证。
